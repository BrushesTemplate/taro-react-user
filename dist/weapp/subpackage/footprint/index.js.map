{"version":3,"file":"subpackage/footprint/index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AAEA;;;;;;;;;;;;;;;;;AChEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AAAA;AAIA;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taro-mobile-react/._src_subpackage_footprint_index.tsx","webpack://taro-mobile-react/._src_subpackage_footprint_components_footprint.tsx","webpack://taro-mobile-react/._src_subpackage_footprint_components_footprintGroup.tsx","webpack://taro-mobile-react/./src/subpackage/footprint/index.tsx?c121"],"sourcesContent":["// @ts-noCheck\nimport {useRef} from 'react';\nimport Taro from \"@tarojs/taro\";\nimport {View, ScrollView,  CheckboxGroup, Checkbox, Button, Image} from '@tarojs/components';\nimport {useFootprint} from 'qj-mobile-store';\nimport HeaderJsx from \"@/components/header\";\nimport CollectItem from './components/collectItem';\nimport {Footprint} from \"./components/footprint\";\n\n\nimport './index.scss';\nimport {FootprintGroup} from \"./components/footprintGroup\";\n\n\nconst Index = () => {\n  // @ts-ignore\n  const {footprintList, edit, setEdit, getData, getSelectItem, delItem, init, checked, handleSelectAll, selectAllChecked} = useFootprint();\n  const SafeArea = useRef(Taro.getStorageSync('safeArea'));\n\n  return (\n    <View className='collectList'>\n      <HeaderJsx />\n\n      {\n        footprintList.length === 0?\n          <View className='noDate'>\n            <Image\n              className='img'\n              src='https://b2cweapp7c0069b43749439d97b7cae6a02bd459.saas.qjclouds.com/paas/shop-master/c-static/images/wxminiImg/noCollection.png' />\n          </View>:\n          <View className='hasDate'>\n            <View className='topBar'>\n              <View className='edit' onClick={() => setEdit(!edit)}>{edit? '完成': '编辑'}</View>\n            </View>\n            <ScrollView\n              style={{\n                height: `calc(100vh - ${SafeArea.current}px - 50px - 54px)`,\n                // height: `calc(100vh - ${SafeArea.current}px)`,\n              }}\n              scrollY\n              scrollWithAnimation\n              // onScrollToLower={getData}\n            >\n              <CheckboxGroup onChange={getSelectItem}>\n                <FootprintGroup footprintList={footprintList} edit={edit} />\n              </CheckboxGroup>\n            </ScrollView>\n            {\n              edit?\n                <View className='handleBar'>\n                  <View className='checkAll'>\n                    {/*<CheckboxGroup onChange={handleSelectAll}>*/}\n                    {/*  <Checkbox value='1' checked={selectAllChecked}>全选</Checkbox>*/}\n                    {/*</CheckboxGroup>*/}\n                  </View>\n                  <Button className='btn' onClick={delItem}>删除</Button>\n                </View>: null\n            }\n          </View>\n      }\n    </View>\n  )\n}\n\nexport default Index;\n","import {View, Image, CheckboxGroup, Checkbox} from '@tarojs/components';\nimport {navigatorImpl} from \"@brushes/utils\";\n\nexport const Footprint = ({item, edit}) => {\n  return (\n    <View className='footPrint'>\n      <>\n        <View className='title' style={{paddingLeft: '20px', paddingTop: '30px', paddingBottom: '10px'}}>{item.title}</View>\n      </>\n      {\n        item.option.map((footprintItem: any, index) => {\n          return (\n            // <CheckboxGroup key={index}>\n              <View className='footprintItem' key={index}>\n                {\n                  edit?\n                    <View className='lPart'>\n                      <Checkbox value={footprintItem.footprintCode}></Checkbox>\n                    </View> : null\n                }\n                <View className='rPart' onClick={() => navigatorImpl(`/subpackage/gooddetail/index?skuCode=${footprintItem.footprintOpcode}`)}>\n                  <Image src={footprintItem.footprintOppic} className='img' />\n                  <View className='info'>\n                    <View className='title'>{footprintItem.footprintOpcont}</View>\n                    <View className='price'>{footprintItem.footprintOpnum} 元</View>\n                  </View>\n                </View>\n              </View>\n            // </CheckboxGroup>\n          )\n        })\n      }\n    </View>\n  )\n}\n\n","import {groupBy} from 'lodash-es';\nimport {useMemo} from \"react\";\nimport {Footprint} from './footprint'\n\n\nexport const FootprintGroup = ({footprintList, edit}) => {\n\n  const list = useMemo(() => {\n    const originArr = footprintList.map(item => {\n      item.gmtCreate = `\n        ${new Date(+item.gmtCreate).getFullYear()}-\n        ${new Date(+item.gmtCreate).getMonth()+1}-\n        ${new Date(+item.gmtCreate).getDate()}\n        `\n      return item\n    })\n\n    const groupObj = groupBy(originArr, 'gmtCreate');\n\n    const resultArr = Object.keys(groupObj).map(item => {\n      return {\n        title: item,\n        option: groupObj[item]\n      }\n    })\n    console.log(8, resultArr);\n\n    return resultArr\n  }, [footprintList])\n\n  return (\n    <>\n      {\n        list.map((item, index) => {\n          return (\n             <Footprint key={index} item={item} edit={edit} />\n          )\n        })\n      }\n    </>\n  )\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"我的足迹\"};\n\n\nvar inst = Page(createPageConfig(component, 'subpackage/footprint/index', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}