{"version":3,"file":"append/bindIphone/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAtBA;AAAA;AAAA;AAwBA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAHA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taro-mobile-react/._src_append_bindIphone_index.tsx","webpack://taro-mobile-react/._src_append_bindIphone_components_code.tsx","webpack://taro-mobile-react/._src_append_bindIphone_hooks_index.ts","webpack://taro-mobile-react/./src/append/bindIphone/index.tsx?0052"],"sourcesContent":["import {\n  Form,\n  Input,\n  Button,\n} from 'antd-mobile'\nimport './index.scss';\nimport {checkMobile} from '@/utils';\nimport CodeJsx from './components/code';\nimport {useBindPhone} from './hooks';\nimport {getCurrentPages, useDidShow} from '@tarojs/taro';\nimport {useRef} from 'react';\n\nexport default () => {\n  const [form] = Form.useForm();\n  const onFinish = useBindPhone();\n  const callback = useRef();\n  useDidShow(() => {\n    const pages= getCurrentPages()\n    const current = pages[pages.length - 1];\n    const event = current.getOpenerEventChannel();\n    event.on('handler', params => {\n      callback.current = params\n    });\n  });\n\n  return (\n    <>\n      <Form\n        form={form}\n        onFinish={(values) => onFinish(callback.current, values)}\n        layout='horizontal'\n        footer={\n          <Button block type='submit' color='primary' size='large'>\n            提交\n          </Button>\n        }\n      >\n        <Form.Item\n          name='userPhone'\n          label='手机号'\n          rules={[{validator: checkMobile}]}\n        >\n          <Input placeholder='请输入手机号' />\n        </Form.Item>\n        <Form.Item\n          label='短信验证码'\n          name='code'\n          rules={[{required: true, message: '验证码不能为空'}]}\n          extra={\n            <div className='extraPart'>\n              <CodeJsx form={form}/>\n            </div>\n          }\n        >\n          <Input placeholder='请输入验证码' clearable/>\n        </Form.Item>\n      </Form>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport { Button  } from 'antd-mobile';\nimport { FormInstance } from 'antd-mobile/es/components/form'\nimport { sendPhone } from 'qj-b2c-api';\nimport { useMountedRef } from '@/hooks';\nimport {sucMessage} from '@/utils/message';\n\nconst CodeJsx = ({ form }: { form: FormInstance }) => {\n  const [dataTime, setDataTime] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const isMounted = useMountedRef();\n  useEffect(() => {\n    const time = setTimeout(function next() {\n      if (dataTime === 0) {\n        clearTimeout(time);\n        return;\n      }\n      if (isMounted.current) {\n        setDataTime((prev: number) => prev - 1);\n      }\n    }, 1000);\n\n    return () => clearTimeout(time);\n  }, [dataTime, isMounted]);\n\n  const fetchCode = async () => {\n    try {\n      await form.validateFields(['userPhone'])\n      setLoading(true);\n      const userPhone = form.getFieldValue('userPhone');\n      sendPhone({ userPhone })\n        .then((res) => {\n          if(res.success) {\n            sucMessage(res);\n          }\n          setDataTime(1 * 60);\n        })\n        .catch((error: any) => {\n          console.log(error)\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } catch (err) {\n\n    }\n\n  };\n\n  return (\n    <Button\n      loading={loading}\n      fill='none'\n      disabled={dataTime > 0}\n      onClick={fetchCode}\n    >\n      {dataTime === 0 ? '获取验证码' : `倒计时${dataTime}秒`}\n    </Button>\n  );\n};\n\nexport default CodeJsx;\n","import {saveUmuserPhoneByWX} from 'qj-b2c-api';\nimport Taro from '@tarojs/taro';\nimport {useCallback} from 'react';\nimport {sucMessage} from '@/utils/message';\n\nexport const msgInfo = [\n  {\n    value: '1',\n    text: '阅读并同意XXXXXX',\n    checked: false\n  }\n];\nexport function useBindPhone() {\n  return useCallback(async (callback, values: any) => {\n    try {\n      const data = await saveUmuserPhoneByWX({\n        ...values,\n        userOpenid: Taro.getStorageSync('userOpenid')\n      })\n      // 异常情况\n      if (!data.dataObj) {\n        // 登录错误\n        Taro.showToast({\n          title: '无法登录',\n          icon: \"error\",\n          duration: 1000\n        })\n        return;\n      }\n\n      if(data.success) {\n        sucMessage(data);\n      }\n\n      Taro.setStorageSync('saas-token', JSON.stringify(data.dataObj));\n      Taro.navigateBack({\n        delta: 1,\n        complete: () => {\n          callback()\n        }\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }, [])\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"绑定手机号\"};\n\n\nvar inst = Page(createPageConfig(component, 'append/bindIphone/index', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}